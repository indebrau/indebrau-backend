enum Permission {
  ADMIN
  USER
}

enum IngredientType {
  MALT
  HOP
  YEAST
}

type User {
  id: ID! @unique
  email: String! @unique
  name: String!
  password: String!
  permissions: [Permission!]!
  participatingBrewingProcesses: [BrewingProcess!]!
}

type Graph {
  id: ID! @unique
  name: String!
  sensorName: String! # mqtt topic
  active: Boolean! # only one active graph per sensor, while there can be multiple brewing processes active..
  updateFrequency: Int! # in seconds
  brewingProcess: BrewingProcess! # to which brewing process does this Graph belong...
  graphData: [GraphData!]! # its "content"
}

type GraphData {
  id: ID! @unique
  time: DateTime!
  value: String!
  graph: Graph!
}

type BrewingProcess {
  id: ID! @unique
  name: String!
  start: DateTime
  end: DateTime
  description: String!
  brewingProcessDetails: BrewingProcessDetails!
    @relation(name: "BrewingProcessDetails", onDelete: CASCADE)

  # graphs linked to this brewing process
  graphs: [Graph!]!
  # participating users
  users: [User!]!
}

type BrewingProcessDetails {
  id: ID! @unique

  # predetermined recipe values
  malts: [Ingredient!]! @relation(name: "Malts", onDelete: CASCADE)
  yeast: Ingredient! @relation(name: "Yeast", onDelete: CASCADE)
  mashWaterLiter: Float!
  spargingWaterLiter: Float!
  yieldsLiter: Float!
  carbonizationGramPerLiter: Float!
  mashInTemperature: Float!
  mashSteps: [Step!]! @relation(name: "MashSteps", onDelete: CASCADE)
  spargingTemperature: Float!
  boilingMinutes: Int!
  boilHopAdditions: [boilHopAddition!]!
    @relation(name: "BoilHopAddition", onDelete: CASCADE)
  dryHopping: dryHopAddition
    @relation(name: "DryHopAddition", onDelete: CASCADE)
  # can be set to null for no dry hopping
  fermentationSteps: [Step!]!
    @relation(name: "FermentationSteps", onDelete: CASCADE)

  # to be added during/after brewing
  originalExtractPlato: Float
  pitchingTemperature: Float
  alcoholPercent: Float
  conditioningDays: Int # days until botteling
}

type Ingredient {
  id: ID! @unique
  type: IngredientType!
  name: String!
  amountGram: Float!
  details: String
}

type Step {
  id: ID! @unique
  durationMinutes: Int!
  temperature: Float!
  details: String
}

type boilHopAddition {
  id: ID! @unique
  hop: Ingredient! @relation(name: "BoilHop", onDelete: CASCADE)
  minutesAfterBoilStart: Int!
}

type dryHopAddition {
  id: ID! @unique
  hop: Ingredient! @relation(name: "DryHop", onDelete: CASCADE)
  addedOn: DateTime # to be edited when actually added
}
