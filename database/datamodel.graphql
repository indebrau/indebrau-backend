enum Permission {
  ADMIN
  USER
}

type User {
  id: ID! @unique
  email: String! @unique
  name: String!
  password: String!
  permissions: [Permission!]!
  participatingBrewingProcesses: [BrewingProcess!]!
}

type Graph {
  id: ID! @unique
  name: String!
  sensorName: String! # mqtt topic
  active: Boolean! # only one active graph per sensor, while there can be multiple brewing processes active..
  updateFrequency: Int! # in seconds
  brewingProcess: BrewingProcess! # to which brewing process does this Graph belong...
  graphData: [GraphData!]! # its "content"
}

type GraphData {
  id: ID! @unique
  time: DateTime!
  value: String!
  graph: Graph!
}

type BrewingProcess {
  id: ID! @unique
  name: String!
  start: DateTime!
  end: DateTime # add when finished
  active: Boolean!
  description: String!
  brewingProcessDetails: BrewingProcessDetails!
  # graphs linked to this brewing process
  graphs: [Graph!]!
  # participating users
  users: [User!]!
}

type BrewingProcessDetails {
  id: ID! @unique
  brewingProcess: BrewingProcess!

  # predetermined recipe values
  malts: [Malt!]!
  hops: [Hop!]!
  yeast: Yeast

  mashWaterLiter: Float!
  spargingWaterLiter: Float!
  yieldsLiter: Int!
  carbonizationGramPerLiter: Float!
  mashInTemperature: Float!
  mashSteps: [MashStep!]!
  spargingTemperature: Float!
  boilingMinutes: Int!
  boilHopAddition: [boilHopAddition!]!
  dryHopping: dryHopAddition # can be set to null for no dry hopping
  fermentationSteps: [FermentationStep!]!

  # to be added during/after brewing
  originalExtractPlato: Float
  pitchingTemperature: Float
  alcoholPercent: Float
  conditioningDays: Int # days until botteling
}

type Malt {
  id: ID! @unique
  name: String!
  amountGram: Float!
  details: String # can be set to tell about the malt
  brewingProcess: BrewingProcess!
}

type Hop {
  id: ID! @unique
  name: String!
  amountGram: Float!
  details: String # can be set to tell about the hop
  brewingProcess: BrewingProcess!
}

type Yeast {
  id: ID! @unique
  name: String!
  amountGram: Float!
  details: String # can be set to tell about the malt
  brewingProcess: BrewingProcess!
}

type MashStep {
  id: ID! @unique
  durationMinutes: Int!
  temperature: Float!
  brewingProcess: BrewingProcess!
}

type boilHopAddition {
  id: ID! @unique
  minutesAfterBoilStart: Int! # null for dryhopping
  amountGram: Float!
  hop: Hop! # links back to the hop ingredient
  brewingProcess: BrewingProcess!
}

type dryHopAddition {
  id: ID! @unique
  amountGram: Float!
  hop: Hop! # links back to the hop ingredient
  addedOn: DateTime # to be edited when actually added
  brewingProcess: BrewingProcess!
}

type FermentationStep {
  id: ID! @unique
  durationDays: Int!
  temperature: Float!
  brewingProcess: BrewingProcess!
}
