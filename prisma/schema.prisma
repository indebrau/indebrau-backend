generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BrewingProcess {
  id                   Int                    @id @default(autoincrement())
  name                 String
  description          String
  active_steps         brewing_step[]
  start                DateTime?
  end                  DateTime?
  Graph                Graph[]
  MediaStream          MediaStream[]
  UserToBrewingProcess UserToBrewingProcess[]
}

model Graph {
  id                 Int             @id @default(autoincrement())
  name               String
  sensor_name        String
  active             Boolean
  update_frequency   Int
  brewing_process_id Int?
  BrewingProcess     BrewingProcess? @relation(fields: [brewing_process_id], references: [id])
  GraphData          GraphData[]
}

model GraphData {
  id       Int      @id @default(autoincrement())
  time     DateTime
  value    String
  graph_id Int?
  Graph    Graph?   @relation(fields: [graph_id], references: [id])
}

model MediaFile {
  id                Int          @id @default(autoincrement())
  time              DateTime
  public_identifier String
  mime_type         mime_type[]
  media_stream_id   Int?
  MediaStream       MediaStream? @relation(fields: [media_stream_id], references: [id])
}

model MediaStream {
  id                 Int             @id @default(autoincrement())
  media_files_name   String
  overwrite          Boolean
  active             Boolean
  update_frequency   Int
  brewing_process_id Int?
  BrewingProcess     BrewingProcess? @relation(fields: [brewing_process_id], references: [id])
  MediaFile          MediaFile[]
}

model User {
  id                   Int                    @id @default(autoincrement())
  email                String                 @unique
  name                 String
  password             String
  permissions          permission[]
  UserToBrewingProcess UserToBrewingProcess[]
}

model UserToBrewingProcess {
  user_id            Int            @default(autoincrement())
  brewing_process_id Int            @default(autoincrement())
  BrewingProcess     BrewingProcess @relation(fields: [brewing_process_id], references: [id])
  User               User           @relation(fields: [user_id], references: [id])

  @@id([user_id, brewing_process_id])
}

enum brewing_step {
  BOILING
  BOTTLED
  CHILLING
  CONDITIONING
  FERMENTING
  HEATING_SPARGE
  HEATING_UP
  MALT_CRUSHING
  MASHING
  MASH_IN
  SPARGING
}

enum mime_type {
  IMAGE_JPEG
  IMAGE_JPG
  IMAGE_PNG
}

enum permission {
  ADMIN
  USER
}
